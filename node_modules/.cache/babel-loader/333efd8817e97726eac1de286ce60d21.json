{"ast":null,"code":"import _classCallCheck from \"/Users/user/Documents/GitHub/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Documents/GitHub/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Api = /*#__PURE__*/function () {\n  function Api(_ref) {\n    var baseUrl = _ref.baseUrl,\n        headers = _ref.headers;\n\n    _classCallCheck(this, Api);\n\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _createClass(Api, [{\n    key: \"getProfile\",\n    value: function getProfile() {\n      return fetch(\"\".concat(this._baseUrl, \"/users/me\"), {\n        headers: this._headers\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject('Ошибка: ', res.status);\n      });\n    }\n  }, {\n    key: \"getInitialCards\",\n    value: function getInitialCards() {\n      return fetch(\"\".concat(this._baseUrl, \"/cards\"), {\n        headers: {\n          authorization: this._headers.authorization\n        }\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject('Ошибка: ', res.status);\n      });\n    }\n  }, {\n    key: \"editProfile\",\n    value: function editProfile(name, about) {\n      return fetch(\"\".concat(this._baseUrl, \"/users/me\"), {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          about: about\n        })\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject('Ошибка: ', res.status);\n      });\n    }\n  }, {\n    key: \"addCard\",\n    value: function addCard(name, link) {\n      return fetch(\"\".concat(this._baseUrl, \"/cards\"), {\n        method: \"POST\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          link: link\n        })\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject('Ошибка: ', res.status);\n      });\n    }\n  }, {\n    key: \"deleteCard\",\n    value: function deleteCard(cardId) {\n      return fetch(\"\".concat(this._baseUrl, \"/cards/\").concat(cardId), {\n        method: \"DELETE\",\n        headers: this._headers\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject('Ошибка: ', res.status);\n      });\n    }\n  }, {\n    key: \"changeLikeCardStatus\",\n    value: function changeLikeCardStatus(cardId, isLiked) {\n      return !isLiked ? this.deleteLike(cardId) : this.addLike(cardId);\n    }\n  }, {\n    key: \"deleteLike\",\n    value: function deleteLike(cardId) {\n      return fetch(\"\".concat(this._baseUrl, \"/cards/\").concat(cardId, \"/likes\"), {\n        method: \"DELETE\",\n        headers: this._headers\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject('Ошибка: ', res.status);\n      });\n    }\n  }, {\n    key: \"addLike\",\n    value: function addLike(cardId) {\n      return fetch(\"\".concat(this._baseUrl, \"/cards/\").concat(cardId, \"/likes\"), {\n        method: \"PUT\",\n        headers: this._headers\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject('Ошибка: ', res.status);\n      });\n    }\n  }, {\n    key: \"updAvatar\",\n    value: function updAvatar(avatar) {\n      return fetch(\"\".concat(this._baseUrl, \"/users/me/avatar\"), {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: avatar\n        })\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject('Ошибка: ', res.status);\n      });\n    }\n  }]);\n\n  return Api;\n}();\n\nexport var api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-39',\n  headers: {\n    authorization: 'a9707e34-62b5-41bf-b58b-1d72c6c41940',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","baseUrl","headers","_baseUrl","_headers","fetch","then","res","ok","json","Promise","reject","status","authorization","name","about","method","body","JSON","stringify","link","cardId","isLiked","deleteLike","addLike","avatar","api"],"sources":["/Users/user/Documents/GitHub/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor({ baseUrl, headers }) {\n        this._baseUrl = baseUrl\n        this._headers = headers\n    }\n\n    getProfile() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: {\n                authorization: this._headers.authorization\n            }\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status));\n    }\n\n    editProfile(name, about) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                about\n            })\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    addCard(name, link) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                link\n            })\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        return !isLiked ? this.deleteLike(cardId) : this.addLike(cardId)\n    }\n\n    deleteLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: \"DELETE\",\n            headers: this._headers\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    addLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: \"PUT\",\n            headers: this._headers\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    updAvatar(avatar) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar\n            })\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n}\n\nexport const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-39',\n    headers: {\n        authorization: 'a9707e34-62b5-41bf-b58b-1d72c6c41940',\n        'Content-Type': 'application/json'\n    }\n}); "],"mappings":"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"},"metadata":{},"sourceType":"module"}