{"ast":null,"code":"import _classCallCheck from \"/Users/user/Documents/GitHub/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Documents/GitHub/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Auth = /*#__PURE__*/function () {\n  function Auth(_ref) {\n    var baseUrl = _ref.baseUrl,\n        headers = _ref.headers;\n\n    _classCallCheck(this, Auth);\n\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _createClass(Auth, [{\n    key: \"signUp\",\n    value: function signUp(email, password) {\n      return fetch(\"\".concat(this._baseUrl, \"/signup\"), {\n        method: \"POST\",\n        headers: this._headers,\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject('Ошибка: ', res.status);\n      });\n    }\n  }, {\n    key: \"signIn\",\n    value: function signIn(email, password) {\n      return fetch(\"\".concat(this._baseUrl, \"/signin\"), {\n        method: \"POST\",\n        headers: this._headers,\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject('Ошибка: ', res.status);\n      });\n    }\n  }, {\n    key: \"isAuth\",\n    value: function isAuth(jwt) {\n      debugger;\n      return fetch(\"\".concat(this._baseUrl, \"/users/me\"), {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \".concat(jwt)\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject('Ошибка: ', res.status);\n      });\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport var auth = new Auth({\n  baseUrl: 'https://auth.nomoreparties.co',\n  headers: {\n    // authorization: 'a9707e34-62b5-41bf-b58b-1d72c6c41940',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Auth","baseUrl","headers","_baseUrl","_headers","email","password","fetch","method","body","JSON","stringify","then","res","ok","json","Promise","reject","status","jwt","auth"],"sources":["/Users/user/Documents/GitHub/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["class Auth {\n    constructor({ baseUrl, headers }) {\n        this._baseUrl = baseUrl\n        this._headers = headers\n    }\n\n    signUp(email, password) {\n        return fetch(`${this._baseUrl}/signup`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                email,\n                password\n            })\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    signIn(email, password) {\n        return fetch(`${this._baseUrl}/signin`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                email,\n                password\n            })\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    isAuth(jwt) {\n        debugger\n        return fetch(`${this._baseUrl}/users/me`, {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${jwt}`,\n        }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n}\n\nexport const auth = new Auth({\n    baseUrl: 'https://auth.nomoreparties.co',\n    headers: {\n        // authorization: 'a9707e34-62b5-41bf-b58b-1d72c6c41940',\n        'Content-Type': 'application/json'\n    }\n}); "],"mappings":";;;IAAMA,I;EACF,oBAAkC;IAAA,IAApBC,OAAoB,QAApBA,OAAoB;IAAA,IAAXC,OAAW,QAAXA,OAAW;;IAAA;;IAC9B,KAAKC,QAAL,GAAgBF,OAAhB;IACA,KAAKG,QAAL,GAAgBF,OAAhB;EACH;;;;2BAEMG,K,EAAOC,Q,EAAU;MACpB,OAAOC,KAAK,WAAI,KAAKJ,QAAT,cAA4B;QACpCK,MAAM,EAAE,MAD4B;QAEpCN,OAAO,EAAE,KAAKE,QAFsB;QAGpCK,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACjBN,KAAK,EAALA,KADiB;UAEjBC,QAAQ,EAARA;QAFiB,CAAf;MAH8B,CAA5B,CAAL,CAQFM,IARE,CAQG,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAe,UAAf,EAA2BJ,GAAG,CAACK,MAA/B,CAA1B;MAAA,CARN,CAAP;IASH;;;2BAEMb,K,EAAOC,Q,EAAU;MACpB,OAAOC,KAAK,WAAI,KAAKJ,QAAT,cAA4B;QACpCK,MAAM,EAAE,MAD4B;QAEpCN,OAAO,EAAE,KAAKE,QAFsB;QAGpCK,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACjBN,KAAK,EAALA,KADiB;UAEjBC,QAAQ,EAARA;QAFiB,CAAf;MAH8B,CAA5B,CAAL,CAQFM,IARE,CAQG,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAe,UAAf,EAA2BJ,GAAG,CAACK,MAA/B,CAA1B;MAAA,CARN,CAAP;IASH;;;2BAEMC,G,EAAK;MACR;MACA,OAAOZ,KAAK,WAAI,KAAKJ,QAAT,gBAA8B;QACtC,gBAAgB,kBADsB;QAEtC,kCAA2BgB,GAA3B;MAFsC,CAA9B,CAAL,CAGJP,IAHI,CAGC,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAe,UAAf,EAA2BJ,GAAG,CAACK,MAA/B,CAA1B;MAAA,CAHJ,CAAP;IAIH;;;;;;AAGL,OAAO,IAAME,IAAI,GAAG,IAAIpB,IAAJ,CAAS;EACzBC,OAAO,EAAE,+BADgB;EAEzBC,OAAO,EAAE;IACL;IACA,gBAAgB;EAFX;AAFgB,CAAT,CAAb"},"metadata":{},"sourceType":"module"}