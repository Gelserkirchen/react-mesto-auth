{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        authorization: this._headers.authorization\n      }\n    }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status));\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status));\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status));\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return !isLiked ? this.deleteLike(cardId) : this.addLike(cardId);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status));\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status));\n  }\n\n  updAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status));\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-39',\n  headers: {\n    authorization: 'a9707e34-62b5-41bf-b58b-1d72c6c41940',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","getProfile","fetch","then","res","ok","json","Promise","reject","status","getInitialCards","authorization","editProfile","name","about","method","body","JSON","stringify","addCard","link","deleteCard","cardId","changeLikeCardStatus","isLiked","deleteLike","addLike","updAvatar","avatar","api"],"sources":["/Users/user/Documents/GitHub/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor({ baseUrl, headers }) {\n        this._baseUrl = baseUrl\n        this._headers = headers\n    }\n\n    getProfile() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: {\n                authorization: this._headers.authorization\n            }\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status));\n    }\n\n    editProfile(name, about) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                about\n            })\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    addCard(name, link) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                link\n            })\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        return !isLiked ? this.deleteLike(cardId) : this.addLike(cardId)\n    }\n\n    deleteLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: \"DELETE\",\n            headers: this._headers\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    addLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: \"PUT\",\n            headers: this._headers\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    updAvatar(avatar) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar\n            })\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n}\n\nexport const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-39',\n    headers: {\n        authorization: 'a9707e34-62b5-41bf-b58b-1d72c6c41940',\n        'Content-Type': 'application/json'\n    }\n}); "],"mappings":"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"},"metadata":{},"sourceType":"module"}