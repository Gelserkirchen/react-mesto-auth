{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport { useEffect, useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { api } from '../utils/api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfileState] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupState] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupState] = useState(false);\n  const [isImagePopupOpen, setImagePopupState] = useState(false); // const [isAvatarSaved, saveAvatar] = useState(false);\n\n  const [selectedCard, setSelectedCard] = useState({\n    link: '',\n    name: ''\n  });\n  const [currentUser, setCurrentUser] = useState({});\n\n  function handleEditProfileClick() {\n    setEditProfileState(!isEditProfilePopupOpen);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupState(!isAddPlacePopupOpen);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupState(!isEditAvatarPopupOpen);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupState(true);\n  }\n\n  function closeAllPopups() {\n    setEditProfileState(false);\n    setAddPlacePopupState(false);\n    setEditAvatarPopupState(false);\n    setImagePopupState(false);\n  }\n\n  useEffect(() => {\n    api.getProfile().then(res => {\n      console.log('res', res);\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log('Ошибка загрузки данных профиля', err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        isOpen: isImagePopupOpen,\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DdPj/WzoiEQ3E34v4ejZ6iNMtvY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Footer","ImagePopup","useEffect","useState","PopupWithForm","CurrentUserContext","api","App","isEditProfilePopupOpen","setEditProfileState","isAddPlacePopupOpen","setAddPlacePopupState","isEditAvatarPopupOpen","setEditAvatarPopupState","isImagePopupOpen","setImagePopupState","selectedCard","setSelectedCard","link","name","currentUser","setCurrentUser","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","card","closeAllPopups","getProfile","then","res","console","log","catch","err"],"sources":["/Users/user/Documents/GitHub/dev/mesto-react/src/components/App.js"],"sourcesContent":["import Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport ImagePopup from './ImagePopup'\nimport { useEffect, useState } from 'react'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\nimport { api } from '../utils/api.js'\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfileState] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupState] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupState] = useState(false);\n  const [isImagePopupOpen, setImagePopupState] = useState(false);\n  // const [isAvatarSaved, saveAvatar] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({ link: '', name: '' });\n  const [currentUser, setCurrentUser] = useState({});\n\n  function handleEditProfileClick() { setEditProfileState(!isEditProfilePopupOpen) }\n  function handleAddPlaceClick() { setAddPlacePopupState(!isAddPlacePopupOpen) }\n  function handleEditAvatarClick() { setEditAvatarPopupState(!isEditAvatarPopupOpen) }\n  function handleCardClick(card) {\n    setSelectedCard(card)\n    setImagePopupState(true)\n  }\n\n  function closeAllPopups() {\n    setEditProfileState(false)\n    setAddPlacePopupState(false)\n    setEditAvatarPopupState(false)\n    setImagePopupState(false)\n  }\n\n  useEffect(() => {\n    api.getProfile()\n      .then(res => {\n          console.log('res', res)\n          setCurrentUser(res)\n      })\n      .catch((err) => {\n        console.log('Ошибка загрузки данных профиля', err)\n      })\n\n  }, [])\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick} />\n        <Footer />\n\n        \n\n        <ImagePopup isOpen={isImagePopupOpen} card={selectedCard} onClose={closeAllPopups} />\n\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAASC,GAAT,QAAoB,iBAApB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,sBAAD,EAAyBC,mBAAzB,IAAgDN,QAAQ,CAAC,KAAD,CAA9D;EACA,MAAM,CAACO,mBAAD,EAAsBC,qBAAtB,IAA+CR,QAAQ,CAAC,KAAD,CAA7D;EACA,MAAM,CAACS,qBAAD,EAAwBC,uBAAxB,IAAmDV,QAAQ,CAAC,KAAD,CAAjE;EACA,MAAM,CAACW,gBAAD,EAAmBC,kBAAnB,IAAyCZ,QAAQ,CAAC,KAAD,CAAvD,CAJa,CAKb;;EACA,MAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC;IAAEe,IAAI,EAAE,EAAR;IAAYC,IAAI,EAAE;EAAlB,CAAD,CAAhD;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;;EAEA,SAASmB,sBAAT,GAAkC;IAAEb,mBAAmB,CAAC,CAACD,sBAAF,CAAnB;EAA8C;;EAClF,SAASe,mBAAT,GAA+B;IAAEZ,qBAAqB,CAAC,CAACD,mBAAF,CAArB;EAA6C;;EAC9E,SAASc,qBAAT,GAAiC;IAAEX,uBAAuB,CAAC,CAACD,qBAAF,CAAvB;EAAiD;;EACpF,SAASa,eAAT,CAAyBC,IAAzB,EAA+B;IAC7BT,eAAe,CAACS,IAAD,CAAf;IACAX,kBAAkB,CAAC,IAAD,CAAlB;EACD;;EAED,SAASY,cAAT,GAA0B;IACxBlB,mBAAmB,CAAC,KAAD,CAAnB;IACAE,qBAAqB,CAAC,KAAD,CAArB;IACAE,uBAAuB,CAAC,KAAD,CAAvB;IACAE,kBAAkB,CAAC,KAAD,CAAlB;EACD;;EAEDb,SAAS,CAAC,MAAM;IACdI,GAAG,CAACsB,UAAJ,GACGC,IADH,CACQC,GAAG,IAAI;MACTC,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;MACAT,cAAc,CAACS,GAAD,CAAd;IACH,CAJH,EAKGG,KALH,CAKUC,GAAD,IAAS;MACdH,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CE,GAA9C;IACD,CAPH;EASD,CAVQ,EAUN,EAVM,CAAT;EAYA,oBACE,QAAC,kBAAD,CAAoB,QAApB;IAA6B,KAAK,EAAEd,WAApC;IAAA,uBACE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,IAAD;QAAM,aAAa,EAAEE,sBAArB;QACE,UAAU,EAAEC,mBADd;QAEE,YAAY,EAAEC,qBAFhB;QAGE,WAAW,EAAEC;MAHf;QAAA;QAAA;QAAA;MAAA,QAFF,eAME,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QANF,eAUE,QAAC,UAAD;QAAY,MAAM,EAAEX,gBAApB;QAAsC,IAAI,EAAEE,YAA5C;QAA0D,OAAO,EAAEW;MAAnE;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GArDQpB,G;;KAAAA,G;AAuDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}