{"ast":null,"code":"class Auth {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  signUp(email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status));\n  }\n\n  signIn(password, email) {\n    debugger;\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status));\n  }\n\n  isAuth() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status));\n  }\n\n}\n\nexport const auth = new Auth({\n  baseUrl: 'https://auth.nomoreparties.co',\n  headers: {\n    authorization: 'a9707e34-62b5-41bf-b58b-1d72c6c41940',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Auth","constructor","baseUrl","headers","_baseUrl","_headers","signUp","email","password","fetch","method","body","JSON","stringify","then","res","ok","json","Promise","reject","status","signIn","isAuth","auth","authorization"],"sources":["/Users/user/Documents/GitHub/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["class Auth {\n    constructor({ baseUrl, headers }) {\n        this._baseUrl = baseUrl\n        this._headers = headers\n    }\n\n    signUp(email, password) {\n        return fetch(`${this._baseUrl}/signup`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                email,\n                password\n            })\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    signIn(password, email) {\n        debugger\n        return fetch(`${this._baseUrl}/signup`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                password,\n                email\n            })\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n\n    isAuth() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        }).then(res => res.ok ? res.json() : Promise.reject('Ошибка: ', res.status))\n    }\n}\n\nexport const auth = new Auth({\n    baseUrl: 'https://auth.nomoreparties.co',\n    headers: {\n        authorization: 'a9707e34-62b5-41bf-b58b-1d72c6c41940',\n        'Content-Type': 'application/json'\n    }\n}); "],"mappings":"AAAA,MAAMA,IAAN,CAAW;EACPC,WAAW,OAAuB;IAAA,IAAtB;MAAEC,OAAF;MAAWC;IAAX,CAAsB;IAC9B,KAAKC,QAAL,GAAgBF,OAAhB;IACA,KAAKG,QAAL,GAAgBF,OAAhB;EACH;;EAEDG,MAAM,CAACC,KAAD,EAAQC,QAAR,EAAkB;IACpB,OAAOC,KAAK,CAAE,GAAE,KAAKL,QAAS,SAAlB,EAA4B;MACpCM,MAAM,EAAE,MAD4B;MAEpCP,OAAO,EAAE,KAAKE,QAFsB;MAGpCM,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBN,KADiB;QAEjBC;MAFiB,CAAf;IAH8B,CAA5B,CAAL,CAQFM,IARE,CAQGC,GAAG,IAAIA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAe,UAAf,EAA2BJ,GAAG,CAACK,MAA/B,CARhC,CAAP;EASH;;EAEDC,MAAM,CAACb,QAAD,EAAWD,KAAX,EAAkB;IACpB;IACA,OAAOE,KAAK,CAAE,GAAE,KAAKL,QAAS,SAAlB,EAA4B;MACpCM,MAAM,EAAE,MAD4B;MAEpCP,OAAO,EAAE,KAAKE,QAFsB;MAGpCM,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBL,QADiB;QAEjBD;MAFiB,CAAf;IAH8B,CAA5B,CAAL,CAQFO,IARE,CAQGC,GAAG,IAAIA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAe,UAAf,EAA2BJ,GAAG,CAACK,MAA/B,CARhC,CAAP;EASH;;EAEDE,MAAM,GAAG;IACL,OAAOb,KAAK,CAAE,GAAE,KAAKL,QAAS,WAAlB,EAA8B;MACtCD,OAAO,EAAE,KAAKE;IADwB,CAA9B,CAAL,CAEJS,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAe,UAAf,EAA2BJ,GAAG,CAACK,MAA/B,CAF9B,CAAP;EAGH;;AAnCM;;AAsCX,OAAO,MAAMG,IAAI,GAAG,IAAIvB,IAAJ,CAAS;EACzBE,OAAO,EAAE,+BADgB;EAEzBC,OAAO,EAAE;IACLqB,aAAa,EAAE,sCADV;IAEL,gBAAgB;EAFX;AAFgB,CAAT,CAAb"},"metadata":{},"sourceType":"module"}